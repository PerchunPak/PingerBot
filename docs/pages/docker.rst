######################
Использование в Docker
######################


*********
Установка
*********


Установка из Dockerhub
======================

По умолчанию, создается несколько контейнеров:

#. ``latest`` - Последний релиз проекта.
#. ``dev`` - Самая последняя возможная версия проекта.
   Используйте только для тестирования, всегда могут быть проблемы
   с несовместимостью версий.
#. ``x.y.z`` - Релиз проекта в формате `Semantic Versions <https://semver.org/>`_.

Каждая из веток имеет так же дубликаты с суффиксами баз данных, на данный
момент это могут быть ``sqlite``, ``mysql`` и ``postgres``.
То есть, например, для ветки ``latest`` будет так же доступен контейнер
``latest-sqlite``.

Тег без суффикса - стандартная база данных. На данный момент это ``sqlite``.
То есть тег ``latest``, загрузит тоже самое что и при ``latest-sqlite``.

.. note::
  Есть так же несколько устаревших веток, которые остаються только для истории.
  Это
  :ref:`main <pages/changelog:версия 0.1.0>`,
  :ref:`rewrite <pages/changelog:версия 0.2.0>` и
  :ref:`newdb <pages/changelog:версия 0.3.0>`.

.. warning::
  Если вы используете базу данных не ``sqlite`` - вам нужно самостоятельно
  применить миграции для нее. В ``sqlite`` миграции применяются при
  компилировании образа. Смотрите :ref:`index:миграции базы данных` для
  инструкции.

.. seealso::
  `Нашу страницу на Dockerhub со списком доступных тегов.
  <https://hub.docker.com/r/perchunpak/pingerbot/tags>`_


Самостоятельная компиляция
==========================

Вы так же можете самостоятельно скомпилировать все контейнеры из корневой
директории проекта.

Для этого необходимо выполнить команду:

  docker build -t perchunpak/pingerbot . --build-arg dialect=sqlite

Где ``--build-arg dialect=sqlite`` - параметр, определяющий базу данных,
которую вы хотите использовать. Вместо ``sqlite`` можете подставить любую
другую, которая поддерживается.

.. warning::
  Если вы используете базу данных не ``sqlite`` - вам нужно самостоятельно
  применить миграции для нее. В ``sqlite`` миграции применяются при
  компилировании образа. Смотрите :ref:`index:миграции базы данных` для
  инструкции.

******
Запуск
******

Для запуска, в обоих случаях установки, используется одна команда:

  docker run -d perchunpak/pingerbot

.. note::
  Если вы используете базу данных ``sqlite``, вы так же должны указать
  ``-v YOUR_PATH:/app/pinger_bot.db`` (Где ``YOUR_PATH`` это путь к
  вашему файлу базы данных, рекомендовано использовать абсолютный путь).
  Это делается, чтобы иметь возможность сохранять базу данных.

  Параметр **нужно** указывать между флагом ``-d`` и ``perchunpak/pingerbot``.

.. warning::
  Вы так же обязательно должны указать всю вашу конфигурацию через ``-e``
  флаги. Эти флаги просто устанавливают переменные окружения, так что
  интерфейс будет аналогичным с ``.env`` файлом.

  Они идут в формате ``-e KEY=VALUE``, где ``KEY`` это ключ к настройке
  (например ``DISCORD_TOKEN``), а ``KEY`` это значение настройки.

  Как и ``-v`` флаг, они **обязаны** идти между флагом ``-d`` и
  ``perchunpak/pingerbot``.

.. seealso::
  Команду

    docker run --help

  Для большего списка аргументов и возможностей, выше только самое основное.
