name: Test

on:
  push:
    branches:
    - master
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Install poetry
      run: |
        curl -sSL "https://install.python-poetry.org" | python

        # Adding `poetry` to `$PATH`:
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Install dependencies
      run: |
        poetry env use "${{ matrix.python-version }}"
        poetry install

    - name: Run checks
      run: make test ci=1

    # Upload coverage to codecov: https://codecov.io/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  post-test:
    runs-on: ubuntu-latest
    needs: 'test'

    steps:
    - uses: actions/checkout@v3

    - name: Configure git
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

    - name: Commit codestyle
      continue-on-error: true
      run: |
        git commit -am "Apply codestyle :pencil2: [skip ci]" || true

    - name: Update poetry
      continue-on-error: true
      run: |
        poetry update
        git commit -am "Update poetry.lock :chart_with_upwards_trend:" || true

    - name: Push changes
      continue-on-error: true
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.head_ref || github.ref_name }}

  docker:
    runs-on: ubuntu-latest
    needs: 'test'
    strategy:
      matrix:
        dialect: ['sqlite', 'mysql', 'postgresql']

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: perchunpak
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: perchunpak/pingerbot
        flavor: |
          latest=false
        # semantic versions in another workflow
        tags: |
          type=raw,value=latest,enable=${{ matrix.dialect == 'sqlite' }}
          type=raw,value=latest,suffix=-${{ matrix.dialect }}
          type=raw,value=dev,enable=${{ matrix.dialect == 'sqlite' }}
          type=raw,value=dev,suffix=-${{ matrix.dialect }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: dialect=${{ matrix.dialect }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
