# Автоматические тесты через GitHub Actions

name: Run Tests in main

on:
  push:
    branches:
    - main
  pull_request:
  release:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: |
        curl -sSL "https://install.python-poetry.org" | python

        # Adding `poetry` to `$PATH`:
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        cache: 'poetry'
    - name: Install dependencies
      run: |
        poetry env use "3.10"
        poetry install
    - name: Lint with flake8
      run: |
        # крашит билд если есть ошибки синтаксиса или не обьявленные переменные
        poetry run flake8 . --exclude .*,__*__,venv --count --select=E9,F63,F7,F82 --show-source
        # exit-zero переводит все ошибки в предупреждения. Редактор GitHub 127 символов в ширину
        poetry run flake8 . --exclude .*,__*__,venv --count --exit-zero --max-complexity=10 --max-line-length=127 --ignore=E70
    # Показывает изменения которые бы ввел black
    # Раз в месяц, они сами применяются
    - name: Use black Auto-formatter
      run: poetry run black . -l 127 --diff
  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: pingerbot
          POSTGRES_PASSWORD: password
          POSTGRES_DB: pingerbotdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: |
        curl -sSL "https://install.python-poetry.org" | python

        # Adding `poetry` to `$PATH`:
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
    - name: Install dependencies
      run: |
        poetry env use "${{ matrix.python-version }}"
        poetry install
    - name: Test with pytest
      run: poetry run pytest
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: pingerbot
        PGPASSWORD: password
        PGDATABASE: pingerbotdb
    - name: Upload HTML report by Coverage (only on Python 3.9)
      if: ${{ matrix.python-version == 3.9 }}
      uses: actions/upload-artifact@v3
      with:
        name: HTML report by Coverage
        path: ./htmlcov
