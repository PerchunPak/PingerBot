name: Deploy

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

jobs:
  pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --only main
      - name: Build and push
        run: |
          poetry publish --build --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }}

  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dialect: ['sqlite', 'mysql', 'postgresql']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: perchunpak
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: perchunpak/pingerbot
        flavor: |
          latest=false
        tags: |
          type=semver,pattern={{version}},enable=${{ matrix.dialect == 'sqlite' }}
          type=semver,pattern={{version}},suffix=-${{ matrix.dialect }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: dialect=${{ matrix.dialect }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
